############## GAM ##############
library("gam")
library("mgcv")
library("ggplot2")

data = select(data, c(TARGET,CODE_GENDER,
                      NAME_FAMILY_STATUS,
                      DAYS_BIRTH,DAYS_EMPLOYED,NAME_EDUCATION_TYPE,NAME_HOUSING_TYPE,
                      DAYS_LAST_PHONE_CHANGE, DAYS_ID_PUBLISH, HOUR_APPR_PROCESS_START ,
                      NAME_CONTRACT_TYPE))

######### Function to set up GAM models
CreateGAMFormula <- function(data, y){
  names <- names(data[,!(names(data) %in% y)])
  if (length(names)>0){
    for (i in 1:length(names)){
      if (i==1){
        if (is.factor(data[[names[i]]]) | is.character(data[[names[i]]])){
          Formula <- paste0(y," ~", names[i])     
        } else if (is.binary(data[[names[i]]]) | length(unique(data[[names[i]]]))<4){
          Formula <- paste0(y," ~", names[i])     
        } else{
          Formula <- paste0(y," ~ s(", names[i],", bs=\"bs\")")}
      }
      else{
        if (is.factor(data[[names[i]]]) | is.character(data[[names[i]]])){
          Formula <- paste0(Formula, "+ ",names[i])
        } else if (is.binary(data[[names[i]]]) | length(unique(data[[names[i]]]))<4){
          Formula <- paste0(Formula, "+ ",names[i])
        } else{
          Formula <-  paste0(Formula," + s(", names[i],", bs=\"bs\")")
        }
      }
    }
  }
  return(as.formula(Formula))
}

f <- CreateGAMFormula(train, "TARGET")
model <- mgcv::gam(f , data=train, family=binomial(link="logit"), method="REML")

## Check the concurvity
concurvity(model,full=TRUE) 
#s(DAYS_BIRTH), s(DAYS_EMPLOYED) nechat
concurvity(model,full=FALSE)
#dáme pryč AMT_CREDIT
f<- TARGET ~ variablef1 + s(variable5, bs = "bs") + variablef4 + variablef3 + s(variable2, bs = "bs") + s(variable6, bs = "bs") + variablef5 + s(variable1, bs = "bs") + s(variable7, bs = "bs")
#FLAG_OWN_REALTY, NAME_EDUCATION_TYPE, s(AMT_INCOME_TOTAL) NENÍ SIGNIFIKANTNÍ
variable1=train$NUM_ANNUITY
variable2=train$DAYS_BIRTH
variable3=train$AMT_INCOME_TOTAL
variable4=train$AMT_CREDIT
variable5=train$AMT_ANNUITY
variable6=train$DAYS_EMPLOYED
variable7= train$ANNUITY_RATIO
variablef1=train$CODE_GENDER
variablef2=train$FLAG_OWN_REALTY
variablef3=train$NAME_FAMILY_STATUS
variablef4=train$NAME_EDUCATION_TYPE
variablef5=train$NAME_HOUSING_TYPE

summary(model)
anova(model)
#anova(modelf, model, test="LRT")
par(mfrow=c(2,2))
gam.check(model)
coef(model)

### Predict the probabilities for the validation dataset.
predict.model <- predict(model, test, type="response") #již ve formě pravděpodobnosti, tedy po transformaci 1/(1+exp(-predict(model, newdata=test)))
auc(test$TARGET, predict.model) #pro model bez úprav je 0.6563, s upravami 0.6558
